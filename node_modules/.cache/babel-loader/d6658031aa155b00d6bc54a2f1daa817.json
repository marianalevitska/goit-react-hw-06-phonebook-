{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Phonebook\\\\ContactForm\\\\ContactForm.jsx\";\nimport { memo, useCallback, useState } from 'react'; // import { nanoid } from 'nanoid';\n\nimport stl from './contactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleClick = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: stl.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: stl.label,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Please enter your name\",\n        value: name,\n        id: \"name\",\n        className: stl.input_line,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Za-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Za-\\u044F\\u0410-\\u042F ])?[a-zA-Za-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        onChange: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tel\",\n        className: stl.label,\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: stl.input_line,\n        value: number,\n        placeholder: \"Please enter your phone number\",\n        id: \"tel\",\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        onChange: this.handleClick\n        /* function call */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: stl.button,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"names":["memo","useCallback","useState","stl","ContactForm","Component","state","name","number","handleClick","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","render","form","label","input_line","button"],"sources":["D:/GitHub/goit-react-hw-04-phonebook/src/components/Phonebook/ContactForm/ContactForm.jsx"],"sourcesContent":["import { memo, useCallback, useState } from 'react';\r\n// import { nanoid } from 'nanoid';\r\n\r\nimport stl from './contactForm.module.css';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleClick = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={stl.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\" className={stl.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          placeholder=\"Please enter your name\"\r\n          value={name}\r\n          id=\"name\"\r\n          className={stl.input_line}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={this.handleClick}\r\n        />\r\n        <label htmlFor=\"tel\" className={stl.label}>\r\n          Contacts\r\n        </label>\r\n        <input\r\n          className={stl.input_line}\r\n          value={number}\r\n          placeholder=\"Please enter your phone number\"\r\n          id=\"tel\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={this.handleClick} /* function call */\r\n        />\r\n        <button type=\"submit\" className={stl.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n"],"mappings":";AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;;;AACA,MAAMC,WAAN,SAA0BC,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAClCC,KADkC,GAC1B;MACNC,IAAI,EAAE,EADA;MAENC,MAAM,EAAE;IAFF,CAD0B;;IAAA,KAMlCC,WANkC,GAMpB,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC5B,MAAM;QAAEH,IAAF;QAAQI;MAAR,IAAkBD,MAAxB;MACA,KAAKE,QAAL,CAAc;QACZ,CAACL,IAAD,GAAQI;MADI,CAAd;IAGD,CAXiC;;IAAA,KAalCE,YAbkC,GAanBC,CAAC,IAAI;MAClBA,CAAC,CAACC,cAAF;MACA,KAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKX,KAAzB;MACA,KAAKM,QAAL,CAAc;QAAEL,IAAI,EAAE,EAAR;QAAYC,MAAM,EAAE;MAApB,CAAd;IACD,CAjBiC;EAAA;;EAmBlCU,MAAM,GAAG;IACP,MAAM;MAAEX,IAAF;MAAQC;IAAR,IAAmB,KAAKF,KAA9B;IACA,oBACE;MAAM,SAAS,EAAEH,GAAG,CAACgB,IAArB;MAA2B,QAAQ,EAAE,KAAKN,YAA1C;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAsB,SAAS,EAAEV,GAAG,CAACiB,KAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QACE,WAAW,EAAC,wBADd;QAEE,KAAK,EAAEb,IAFT;QAGE,EAAE,EAAC,MAHL;QAIE,SAAS,EAAEJ,GAAG,CAACkB,UAJjB;QAKE,IAAI,EAAC,MALP;QAME,IAAI,EAAC,MANP;QAOE,OAAO,EAAC,yGAPV;QAQE,KAAK,EAAC,wIARR;QASE,QAAQ,MATV;QAUE,QAAQ,EAAE,KAAKZ;MAVjB;QAAA;QAAA;QAAA;MAAA,QAJF,eAgBE;QAAO,OAAO,EAAC,KAAf;QAAqB,SAAS,EAAEN,GAAG,CAACiB,KAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF,eAmBE;QACE,SAAS,EAAEjB,GAAG,CAACkB,UADjB;QAEE,KAAK,EAAEb,MAFT;QAGE,WAAW,EAAC,gCAHd;QAIE,EAAE,EAAC,KAJL;QAKE,IAAI,EAAC,KALP;QAME,IAAI,EAAC,QANP;QAOE,OAAO,EAAC,wFAPV;QAQE,KAAK,EAAC,8FARR;QASE,QAAQ,MATV;QAUE,QAAQ,EAAE,KAAKC;QAAa;;MAV9B;QAAA;QAAA;QAAA;MAAA,QAnBF,eA+BE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAEN,GAAG,CAACmB,MAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqCD;;AA1DiC;;AA6DpC,eAAelB,WAAf"},"metadata":{},"sourceType":"module"}