{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Phonebook\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from 'react'; // import { nanoid } from 'nanoid';\n\nimport stl from './contactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleClick = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: stl.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: stl.label,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Please enter your name\",\n        value: name,\n        id: \"name\",\n        className: stl.input_line,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Za-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Za-\\u044F\\u0410-\\u042F ])?[a-zA-Za-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        onChange: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tel\",\n        className: stl.label,\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: stl.input_line,\n        value: number,\n        placeholder: \"Please enter your phone number\",\n        id: \"tel\",\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        onChange: this.handleClick\n        /* function call */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: stl.button,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"names":["Component","stl","ContactForm","state","name","number","handleClick","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","render","form","label","input_line","button"],"sources":["D:/GitHub/goit-react-hw-04-phonebook/src/components/Phonebook/ContactForm/ContactForm.jsx"],"sourcesContent":["import { Component } from 'react';\r\n// import { nanoid } from 'nanoid';\r\n\r\nimport stl from './contactForm.module.css';\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    handleClick = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={stl.form} onSubmit={this.handleSubmit}>\r\n                <label htmlFor='name' className={stl.label}>Name</label>\r\n                <input\r\n                    placeholder='Please enter your name'\r\n                    value={name}\r\n                    id='name'\r\n                    className={stl.input_line}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                    onChange={this.handleClick}\r\n                />\r\n                <label htmlFor='tel' className={stl.label}>Contacts</label>\r\n                <input\r\n                    className={stl.input_line}\r\n                    value={number}\r\n                    placeholder='Please enter your phone number'\r\n                    id='tel'\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                    onChange={this.handleClick} /* function call */\r\n                />\r\n                <button type='submit' className={stl.button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactForm;"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;;;AACA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAChCG,KADgC,GACxB;MACJC,IAAI,EAAE,EADF;MAEJC,MAAM,EAAE;IAFJ,CADwB;;IAAA,KAMhCC,WANgC,GAMlB,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC1B,MAAM;QAAEH,IAAF;QAAQI;MAAR,IAAkBD,MAAxB;MACA,KAAKE,QAAL,CAAc;QACV,CAACL,IAAD,GAAQI;MADE,CAAd;IAGH,CAX+B;;IAAA,KAahCE,YAbgC,GAajBC,CAAC,IAAI;MAChBA,CAAC,CAACC,cAAF;MACA,KAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKX,KAAzB;MACA,KAAKM,QAAL,CAAc;QAAEL,IAAI,EAAE,EAAR;QAAYC,MAAM,EAAE;MAApB,CAAd;IACH,CAjB+B;EAAA;;EAmBhCU,MAAM,GAAG;IACL,MAAM;MAAEX,IAAF;MAAQC;IAAR,IAAmB,KAAKF,KAA9B;IACA,oBACI;MAAM,SAAS,EAAEF,GAAG,CAACe,IAArB;MAA2B,QAAQ,EAAE,KAAKN,YAA1C;MAAA,wBACI;QAAO,OAAO,EAAC,MAAf;QAAsB,SAAS,EAAET,GAAG,CAACgB,KAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,WAAW,EAAC,wBADhB;QAEI,KAAK,EAAEb,IAFX;QAGI,EAAE,EAAC,MAHP;QAII,SAAS,EAAEH,GAAG,CAACiB,UAJnB;QAKI,IAAI,EAAC,MALT;QAMI,IAAI,EAAC,MANT;QAOI,OAAO,EAAC,yGAPZ;QAQI,KAAK,EAAC,wIARV;QASI,QAAQ,MATZ;QAUI,QAAQ,EAAE,KAAKZ;MAVnB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAcI;QAAO,OAAO,EAAC,KAAf;QAAqB,SAAS,EAAEL,GAAG,CAACgB,KAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdJ,eAeI;QACI,SAAS,EAAEhB,GAAG,CAACiB,UADnB;QAEI,KAAK,EAAEb,MAFX;QAGI,WAAW,EAAC,gCAHhB;QAII,EAAE,EAAC,KAJP;QAKI,IAAI,EAAC,KALT;QAMI,IAAI,EAAC,QANT;QAOI,OAAO,EAAC,wFAPZ;QAQI,KAAK,EAAC,8FARV;QASI,QAAQ,MATZ;QAUI,QAAQ,EAAE,KAAKC;QAAa;;MAVhC;QAAA;QAAA;QAAA;MAAA,QAfJ,eA2BI;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAEL,GAAG,CAACkB,MAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA+BH;;AApD+B;;AAwDpC,eAAejB,WAAf"},"metadata":{},"sourceType":"module"}