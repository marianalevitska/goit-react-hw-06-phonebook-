{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Phonebook\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { memo, useCallback, useState } from 'react'; // import { nanoid } from 'nanoid';\n\nimport stl from './contactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  const [state, setState] = useState({\n    name: '',\n    number: ''\n  });\n\n  handleClick = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: '',\n      number: ''\n    });\n  };\n\n  const {\n    name,\n    number\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: stl.form,\n    onSubmit: this.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      className: stl.label,\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Please enter your name\",\n      value: name,\n      id: \"name\",\n      className: stl.input_line,\n      type: \"text\",\n      name: \"name\",\n      pattern: \"^[a-zA-Za-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Za-\\u044F\\u0410-\\u042F ])?[a-zA-Za-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true,\n      onChange: this.handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tel\",\n      className: stl.label,\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: stl.input_line,\n      value: number,\n      placeholder: \"Please enter your phone number\",\n      id: \"tel\",\n      type: \"tel\",\n      name: \"number\",\n      pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n      title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n      required: true,\n      onChange: this.handleClick\n      /* function call */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: stl.button,\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"3VG0bRQsS+/MKZhaU7QaRo48aR4=\");\n\n_c = ContactForm;\nexport default _c2 = /*#__PURE__*/memo(ContactForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContactForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useCallback","useState","stl","ContactForm","state","setState","name","number","handleClick","target","value","handleSubmit","e","preventDefault","props","onSubmit","form","label","input_line","button"],"sources":["D:/GitHub/goit-react-hw-04-phonebook/src/components/Phonebook/ContactForm/ContactForm.jsx"],"sourcesContent":["import { memo, useCallback, useState } from 'react';\r\n// import { nanoid } from 'nanoid';\r\n\r\nimport stl from './contactForm.module.css';\r\nfunction ContactForm() {\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n\r\n  handleClick = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  const { name, number } = this.state;\r\n  return (\r\n    <form className={stl.form} onSubmit={this.handleSubmit}>\r\n      <label htmlFor=\"name\" className={stl.label}>\r\n        Name\r\n      </label>\r\n      <input\r\n        placeholder=\"Please enter your name\"\r\n        value={name}\r\n        id=\"name\"\r\n        className={stl.input_line}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        onChange={this.handleClick}\r\n      />\r\n      <label htmlFor=\"tel\" className={stl.label}>\r\n        Contacts\r\n      </label>\r\n      <input\r\n        className={stl.input_line}\r\n        value={number}\r\n        placeholder=\"Please enter your phone number\"\r\n        id=\"tel\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        onChange={this.handleClick} /* function call */\r\n      />\r\n      <button type=\"submit\" className={stl.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default memo(ContactForm);\r\n"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;IACjCK,IAAI,EAAE,EAD2B;IAEjCC,MAAM,EAAE;EAFyB,CAAD,CAAlC;;EAKAC,WAAW,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;IAC5B,MAAM;MAAEH,IAAF;MAAQI;IAAR,IAAkBD,MAAxB;IACA,KAAKJ,QAAL,CAAc;MACZ,CAACC,IAAD,GAAQI;IADI,CAAd;EAGD,CALD;;EAOAC,YAAY,GAAGC,CAAC,IAAI;IAClBA,CAAC,CAACC,cAAF;IACA,KAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKX,KAAzB;IACA,KAAKC,QAAL,CAAc;MAAEC,IAAI,EAAE,EAAR;MAAYC,MAAM,EAAE;IAApB,CAAd;EACD,CAJD;;EAMA,MAAM;IAAED,IAAF;IAAQC;EAAR,IAAmB,KAAKH,KAA9B;EACA,oBACE;IAAM,SAAS,EAAEF,GAAG,CAACc,IAArB;IAA2B,QAAQ,EAAE,KAAKL,YAA1C;IAAA,wBACE;MAAO,OAAO,EAAC,MAAf;MAAsB,SAAS,EAAET,GAAG,CAACe,KAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MACE,WAAW,EAAC,wBADd;MAEE,KAAK,EAAEX,IAFT;MAGE,EAAE,EAAC,MAHL;MAIE,SAAS,EAAEJ,GAAG,CAACgB,UAJjB;MAKE,IAAI,EAAC,MALP;MAME,IAAI,EAAC,MANP;MAOE,OAAO,EAAC,yGAPV;MAQE,KAAK,EAAC,wIARR;MASE,QAAQ,MATV;MAUE,QAAQ,EAAE,KAAKV;IAVjB;MAAA;MAAA;MAAA;IAAA,QAJF,eAgBE;MAAO,OAAO,EAAC,KAAf;MAAqB,SAAS,EAAEN,GAAG,CAACe,KAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF,eAmBE;MACE,SAAS,EAAEf,GAAG,CAACgB,UADjB;MAEE,KAAK,EAAEX,MAFT;MAGE,WAAW,EAAC,gCAHd;MAIE,EAAE,EAAC,KAJL;MAKE,IAAI,EAAC,KALP;MAME,IAAI,EAAC,QANP;MAOE,OAAO,EAAC,wFAPV;MAQE,KAAK,EAAC,8FARR;MASE,QAAQ,MATV;MAUE,QAAQ,EAAE,KAAKC;MAAa;;IAV9B;MAAA;MAAA;MAAA;IAAA,QAnBF,eA+BE;MAAQ,IAAI,EAAC,QAAb;MAAsB,SAAS,EAAEN,GAAG,CAACiB,MAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;GAzDQhB,W;;KAAAA,W;AA2DT,kCAAeJ,IAAI,CAACI,WAAD,CAAnB"},"metadata":{},"sourceType":"module"}