{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Phonebook\\\\Phonebook.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"./ContactForm\";\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Phonebook extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContacts = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      // this.setState({ contacts: item.contacts.value })\n      const {\n        contacts\n      } = this.state;\n      const isDublicate = contacts.find(item => item.name === name);\n\n      if (isDublicate) {\n        alert(`${name} is alredy in your phonebook`);\n        return;\n      }\n\n      ;\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        const newContact = {\n          id: nanoid(),\n          name,\n          number\n        };\n        return {\n          contacts: [...contacts, newContact]\n        };\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(_ref2 => {\n        let {\n          contacts\n        } = _ref2;\n        return {\n          contacts: contacts.filter(item => item.id !== id)\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      name\n    } = this.state;\n    const flt = this.state.filter;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        onDelete: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: flt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Phonebook;","map":{"version":3,"sources":["D:/GitHub/goit-react-hw-02-phonebook/src/components/Phonebook/Phonebook.jsx"],"names":["Component","nanoid","ContactForm","ContactList","Filter","Phonebook","state","contacts","id","name","number","filter","addContacts","isDublicate","find","item","alert","setState","prevState","newContact","deleteContact","render","flt"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,eAApB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OADM,EAEN;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,gBAApB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAFM,EAGN;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,eAApB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAHM,EAIN;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,gBAApB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAJM,CADN;AAOJC,MAAAA,MAAM,EAAE;AAPJ,KADsB;;AAAA,SAW9BC,WAX8B,GAWhB,QAAsB;AAAA,UAArB;AAAEH,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAqB;AAChC;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMO,WAAW,GAAGN,QAAQ,CAACO,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACN,IAAL,KAAcA,IAApC,CAApB;;AACA,UAAII,WAAJ,EAAiB;AACbG,QAAAA,KAAK,CAAE,GAAEP,IAAK,8BAAT,CAAL;AACA;AACH;;AAAA;AAED,WAAKQ,QAAL,CAAcC,SAAS,IAAI;AACvB,cAAM;AAAEX,UAAAA;AAAF,YAAeW,SAArB;AACA,cAAMC,UAAU,GAAG;AACfX,UAAAA,EAAE,EAAEP,MAAM,EADK;AAEfQ,UAAAA,IAFe;AAGfC,UAAAA;AAHe,SAAnB;AAKA,eAAO;AACHH,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcY,UAAd;AADP,SAAP;AAGH,OAVD;AAaH,KAjC6B;;AAAA,SAmC9BC,aAnC8B,GAmCdZ,EAAE,IAAI;AAElB,WAAKS,QAAL,CAAc;AAAA,YAAC;AAAEV,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC7BA,UAAAA,QAAQ,EAAEA,QAAQ,CAACI,MAAT,CAAgBI,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAApC;AADmB,SAAnB;AAAA,OAAd;AAGH,KAxC6B;AAAA;;AA0C9Ba,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEd,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAqB,KAAKH,KAAhC;AACA,UAAMgB,GAAG,GAAG,KAAKhB,KAAL,CAAWK,MAAvB;AACA,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEL,QAAvB;AAAiC,QAAA,QAAQ,EAAE,KAAKa;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApD6B;;AAwDlC,eAAejB,SAAf","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport ContactForm from \"./ContactForm\";\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\n\r\nclass Phonebook extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: ''\r\n    }\r\n\r\n    addContacts = ({ name, number }) => {\r\n        // this.setState({ contacts: item.contacts.value })\r\n        const { contacts } = this.state;\r\n        const isDublicate = contacts.find(item => item.name === name);\r\n        if (isDublicate) {\r\n            alert(`${name} is alredy in your phonebook`);\r\n            return;\r\n        };\r\n\r\n        this.setState(prevState => {\r\n            const { contacts } = prevState;\r\n            const newContact = {\r\n                id: nanoid(),\r\n                name,\r\n                number\r\n            };\r\n            return {\r\n                contacts: [...contacts, newContact],\r\n            };\r\n        });\r\n\r\n\r\n    }\r\n\r\n    deleteContact = id => {\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: contacts.filter(item => item.id !== id),\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { contacts, name } = this.state;\r\n        const flt = this.state.filter;\r\n        return (\r\n            <div>\r\n                <ContactForm onSubmit={this.addContacts} />\r\n                <ContactList contacts={contacts} onDelete={this.deleteContact} />\r\n                <Filter filter={flt} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Phonebook;"]},"metadata":{},"sourceType":"module"}