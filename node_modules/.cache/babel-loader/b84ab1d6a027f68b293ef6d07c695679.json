{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Phonebook\\\\ContactList\\\\ContactList.jsx\";\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport stl from './contactList.module.css';\nimport ContactItem from './ContactItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactList(_ref) {\n  let {\n    contacts,\n    onDelete\n  } = _ref;\n  const elements = contacts.map(_ref2 => {\n    let {\n      id,\n      name,\n      number\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(ContactItem, {\n      options: [id, name, number],\n      onDelete: onDelete\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: stl.list,\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ContactList;\nContactList.defaultProps = {\n  contacts: []\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nexport default _c2 = /*#__PURE__*/memo(ContactList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContactList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","PropTypes","stl","ContactItem","ContactList","contacts","onDelete","elements","map","id","name","number","list","defaultProps","propTypes","arrayOf","shape","string","isRequired","func"],"sources":["D:/GitHub/goit-react-hw-04-phonebook/src/components/Phonebook/ContactList/ContactList.jsx"],"sourcesContent":["import { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport stl from './contactList.module.css';\r\nimport ContactItem from './ContactItem';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  const elements = contacts.map(({ id, name, number }) => (\r\n    <ContactItem key={id} options={[id, name, number]} onDelete={onDelete} />\r\n  ));\r\n  return <ul className={stl.list}>{elements}</ul>;\r\n}\r\n\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default memo(ContactList);\r\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,WAAT,OAA6C;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAC3C,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa;IAAA,IAAC;MAAEC,EAAF;MAAMC,IAAN;MAAYC;IAAZ,CAAD;IAAA,oBAC5B,QAAC,WAAD;MAAsB,OAAO,EAAE,CAACF,EAAD,EAAKC,IAAL,EAAWC,MAAX,CAA/B;MAAmD,QAAQ,EAAEL;IAA7D,GAAkBG,EAAlB;MAAA;MAAA;MAAA;IAAA,QAD4B;EAAA,CAAb,CAAjB;EAGA,oBAAO;IAAI,SAAS,EAAEP,GAAG,CAACU,IAAnB;IAAA,UAA0BL;EAA1B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KALQH,W;AAOTA,WAAW,CAACS,YAAZ,GAA2B;EACzBR,QAAQ,EAAE;AADe,CAA3B;AAIAD,WAAW,CAACU,SAAZ,GAAwB;EACtBT,QAAQ,EAAEJ,SAAS,CAACc,OAAV,CACRd,SAAS,CAACe,KAAV,CAAgB;IACdP,EAAE,EAAER,SAAS,CAACgB,MAAV,CAAiBC,UADP;IAEdR,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBC,UAFT;IAGdP,MAAM,EAAEV,SAAS,CAACgB,MAAV,CAAiBC;EAHX,CAAhB,CADQ,EAMRA,UAPoB;EAQtBZ,QAAQ,EAAEL,SAAS,CAACkB,IAAV,CAAeD;AARH,CAAxB;AAWA,kCAAelB,IAAI,CAACI,WAAD,CAAnB"},"metadata":{},"sourceType":"module"}