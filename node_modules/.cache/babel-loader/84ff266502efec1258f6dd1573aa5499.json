{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\Phonebook\\\\Phonebook.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Phonebook extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContacts = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      // this.setState({ contacts: item.contacts.value })\n      const {\n        contacts\n      } = this.state;\n      const newContactName = name.toLowerCase();\n      const isDublicate = contacts.find(item => item.name.toLowerCase() === newContactName);\n\n      if (isDublicate) {\n        alert(`${name} is alredy in your phonebook`);\n        return;\n      }\n\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        const newContact = {\n          id: nanoid(),\n          name,\n          number\n        };\n        return {\n          contacts: [...contacts, newContact]\n        };\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(_ref2 => {\n        let {\n          contacts\n        } = _ref2;\n        return {\n          contacts: contacts.filter(item => item.id !== id)\n        };\n      });\n    };\n\n    this.filterChange = _ref3 => {\n      let {\n        target\n      } = _ref3;\n      const {\n        value\n      } = target;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getContactsFiltered = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n\n      if (!filter) {\n        return contacts;\n      }\n\n      const filterRequest = filter.toLowerCase();\n      const filteredContacts = contacts.filter(_ref4 => {\n        let {\n          name\n        } = _ref4;\n        const result = name.toLowerCase().includes(filterRequest);\n        return result;\n      });\n      return filteredContacts;\n    };\n  }\n\n  // get files from local storage\n  componentDidMount() {\n    const data = localStorage.getItem('contacts');\n    const contacts = JSON.parse(data);\n\n    if (data !== null && data !== void 0 && data.length) {\n      this.setState({\n        contacts\n      }); // JSON.parse - convert string to object\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      contacts\n    } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredResult = this.getContactsFiltered();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        onFilter: this.filterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredResult,\n        onDelete: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Phonebook;","map":{"version":3,"sources":["D:/GitHub/goit-react-hw-03-phonebook/src/components/Phonebook/Phonebook.jsx"],"names":["Component","nanoid","ContactForm","ContactList","Filter","Phonebook","state","contacts","id","name","number","filter","addContacts","newContactName","toLowerCase","isDublicate","find","item","alert","setState","prevState","newContact","deleteContact","filterChange","target","value","getContactsFiltered","filterRequest","filteredContacts","result","includes","componentDidMount","data","localStorage","getItem","JSON","parse","length","componentDidUpdate","prevProps","setItem","stringify","render","filteredResult"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  // get files from local storage\r\n\r\n  componentDidMount() {\r\n    const data = localStorage.getItem('contacts');\r\n    const contacts = JSON.parse(data);\r\n    if (data?.length) {\r\n      this.setState({ contacts }); // JSON.parse - convert string to object\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContacts = ({ name, number }) => {\r\n    // this.setState({ contacts: item.contacts.value })\r\n    const { contacts } = this.state;\r\n    const newContactName = name.toLowerCase();\r\n    const isDublicate = contacts.find(\r\n      item => item.name.toLowerCase() === newContactName\r\n    );\r\n    if (isDublicate) {\r\n      alert(`${name} is alredy in your phonebook`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n      const newContact = {\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      };\r\n      return {\r\n        contacts: [...contacts, newContact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(item => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  filterChange = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n  };\r\n\r\n  getContactsFiltered = () => {\r\n    const { contacts, filter } = this.state;\r\n    if (!filter) {\r\n      return contacts;\r\n    }\r\n    const filterRequest = filter.toLowerCase();\r\n    const filteredContacts = contacts.filter(({ name }) => {\r\n      const result = name.toLowerCase().includes(filterRequest);\r\n      return result;\r\n    });\r\n    return filteredContacts;\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredResult = this.getContactsFiltered();\r\n    return (\r\n      <div>\r\n        <ContactForm onSubmit={this.addContacts} />\r\n        <Filter filter={filter} onFilter={this.filterChange} />\r\n        <ContactList contacts={filteredResult} onDelete={this.deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n"]},"metadata":{},"sourceType":"module"}